user  www-data;
worker_processes  auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 1000000;
error_log /dev/null;
pid        /var/run/nginx.pid;
events {
    use epoll;
    worker_connections 65535;
    accept_mutex off;
    multi_accept off;  # multi_accept on;
}
stream {
	resolver 8.8.8.8 223.5.5.5 valid=30s;
    # map的作用时将sni中的主机名，进行映射
    # 下面这个，当内部变量$ssl_preread_server_name匹配到任意一个域名的时候，会将第二个值赋值给$backend_name
    # 具体来说，当sni为test.example.org时，变量$backend_name的值为trojan_proxy
    map $ssl_preread_server_name $backend_name {
        hgc1.8ssd3.top trojan;
        hk2.speedtest.net cachk2;
        us2.speedtest.net cacus2;
        tw2.speedtest.net cactw2;
        jp2.speedtest.net cacjp2;
        ca2.speedtest.net cacca2;
        sg2.speedtest.net cacsg2;
        hk1.speedtest.net cachk1;
        us1.speedtest.net cacus1;
        tw1.speedtest.net cactw1;
        jp1.speedtest.net cacjp1;
        ca1.speedtest.net cacca1;
        sg1.speedtest.net cacsg1;
        www.speedtest.net trojan;
        tchk1.speedtest.net tchk1;
        lhhk1.speedtest.net lhhk1;
        hk.trojan.node-is.green naiuntjhk;
        tw.trojan.node-is.green naiuntjtw;
        sg.trojan.node-is.green naiuntjsg;
        jp.trojan.node-is.green naiuntjjp;
        us.trojan.node-is.green naiuntjus;
        default web;
    }
		# upstream模块作用与http模块中的相同
    upstream web {
      server www.speedtest.net:443;
    }
    upstream cachk2 {
      server 46.232.121.48:65202;
    }
    upstream cacus2 {
      server 5.34.216.45:65202;
    }
    upstream cactw2 {
      server 103.36.25.61:65202;
    }
    upstream cacsg2 {
      server 103.84.217.167:65202;
    }
    upstream cacjp2 {
      server 212.87.194.87:65202;
    }
    upstream cacca2 {
      server 46.3.80.34:65202;
    }
    upstream cachk1 {
      server 46.232.121.48:65201;
    }
    upstream cacus1 {
      server 5.34.216.45:65201;
    }
    upstream cactw1 {
      server 103.36.25.61:65201;
    }
    upstream cacsg1 {
      server 103.84.217.167:65201;
    }
    upstream cacjp1 {
      server 212.87.194.87:65201;
    }
    upstream cacca1 {
      server 46.3.80.34:65201;
    }
    upstream trojan {
      server hkt4.sni.neko.sbs:42020 weight=1;
      server hkt6.sni.neko.sbs:42020 weight=3;
    }
    upstream tchk1 {
      server hkt4.sni.neko.sbs:65501 weight=1;
      server hkt6.sni.neko.sbs:65501 weight=1;
    }
    upstream lhhk1 {
      server hkt4.sni.neko.sbs:65502 weight=1;
      server hkt6.sni.neko.sbs:65502 weight=1;
    }
    upstream naiuntjhk{
      server hk.trojan.node-is.green:52004;
    }
    upstream naiuntjtw{
      server hk.trojan.node-is.green:52004;
    }
    upstream naiuntjsg{
      server sg.trojan.node-is.green:52004;
    }
    upstream naiuntjjp{
      server jp.trojan.node-is.green:52004;
    }
    upstream naiuntjus{
      server us.trojan.node-is.green:52004;
    }
    server {
        access_log off;
        error_log /dev/null;
        listen 65001 reuseport; # 这里server监听443端口，http模块中的server就不能监听443端口了，需要通过proxy_pass代理
        listen [::]:65001 reuseport;
        ssl_preread on; # 开启预读sni的功能，使得map模块正常工作
        proxy_pass $backend_name;
        proxy_protocol on;
    }
    
}
